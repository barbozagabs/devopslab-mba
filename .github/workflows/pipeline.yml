# Nome do Workflow
name: DevSecOpsLab Pipeline

# Evento que irá acionar a pipeline
on:
  push:
    branches:
      - main
      - feature/ProfFabiano

jobs:
  CodeTeste:
    runs-on: ubuntu-latest
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v4       # https://github.com/actions/checkout
        with:
          # Você está solicitando que nenhum histórico seja baixado além do commit mais recente.
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5   # https://github.com/actions/setup-python
        with:
          python-version: '3.10'

      - name: Install Requirements
        run:  pip install flask flask-wtf pytest pytest-cov

      - name: Unit Test
        run: |
          coverage run --source=app -m pytest test.py
          coverage report -m
          coverage xml -i

  CodeSecurity:
    runs-on: ubuntu-latest
    #needs: CodeTeste
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v4       # https://github.com/actions/checkout
        with:
          # Você está solicitando que nenhum histórico seja baixado além do commit mais recente.
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master  #https://github.com/marketplace/actions/sonarcloud-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  CodeBuild:
    runs-on: ubuntu-latest
   # needs: CodeSecurity
    steps:
      - name: Download do Repositório
        uses: actions/checkout@v4       # https://github.com/actions/checkout
        with:
          # Você está solicitando que nenhum histórico seja baixado além do commit mais recente.
          fetch-depth: 0

      - name: Login no Artifact Registry
        uses: docker/login-action@v3      # https://github.com/marketplace/actions/docker-login#google-artifact-registry-gar
        with:
          registry: '${{ vars.GOOGLE_ARTIFACT }}'
          username: _json_key
          password: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Build Image
        run: |
          docker build -t ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest .

      - name: Push Image
        run: |
          docker push ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest

  CodeDeploy:
    needs: CodeBuild
    runs-on: ubuntu-latest
    permissions:
        contents: write
        issues: write
        pull-requests: write

    steps:
      - name: Download do Repositório
        uses: actions/checkout@v4       # https://github.com/actions/checkout

      - name: Login no GCP
        uses: 'google-github-actions/auth@v2' # https://github.com/google-github-actions/auth
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Cloud Run Deploy
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'  # https://github.com/marketplace/actions/deploy-to-cloud-run
        with:
          service: ${{ vars.GOOGLE_MYAPP }}
          region: ${{ vars.GOOGLE_REGION }}
          image:   ${{ vars.GOOGLE_ARTIFACT }}/${{ vars.GOOGLE_PROJECT_ID }}/${{ vars.GOOGLE_REPONAME }}/${{ vars.GOOGLE_MYAPP }}:latest
          flags: '--allow-unauthenticated'

      - name: Validando a API
        run: 'curl "${{ steps.deploy.outputs.url }}"'

  CodeDast:
      needs: CodeDeploy
      runs-on: ubuntu-latest
      permissions:
          contents: write
          issues: write
          pull-requests: write
  
      steps:
        - name: Download do Repositório
          uses: actions/checkout@v4      
           # https://github.com/actions/checkout
        - name: DAST - ZAP Scan
          uses: zaproxy/action-full-scan@v0.9.0
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
            target: '${{ needs.CodeDeploy.deploy.outputs.url }}'
            cmd_options: '-a'

  SlackNotification:
      needs: CodeDast
      runs-on: ubuntu-latest

      steps:
        - name: Notificação Slack
          id: slack
          uses: slackapi/slack-github-action@v1.25.0
          with:
            payload: |
              {
                "text": "DevOpsLab Pipeline Gabs : ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "DevOpsLab Pipeline Gabs: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                    }
                  }
                ]
              }
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFICATIONS_TOKEN }}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
